name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'yarn'
        cache-dependency-path: |
          package.json
          webApp/cypress-realworld-app/package.json

    # Install and setup Real World App dependencies
    - name: Setup Real World App
      run: |
        cd webApp/cypress-realworld-app
        # Remove package-lock.json if it exists to avoid mixed package manager issues
        rm -f package-lock.json
        # Install dependencies
        yarn install
        cd ../../

    # Start the Real World App
    - name: Start Real World App
      run: |
        cd webApp/cypress-realworld-app
        yarn dev &
        
        # Wait for both frontend and backend to be ready
        echo "Waiting for app to start..."
        timeout 30 bash -c 'until curl -s http://localhost:3000 > /dev/null && curl -s http://localhost:3001 > /dev/null; do sleep 2; done' || (echo "App failed to start" && exit 1)
        echo "App is ready!"
        cd ../../

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test --reporter=line,allure-playwright

    - name: Generate Allure report
      run: npx allure generate ./allure-results --clean -o ./allure-report

    - name: Upload Allure results (Raw data)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-raw-results
        path: ./allure-results
        retention-days: 7

    # Deploy Allure Report to GitHub Pages - Updated configuration
    - name: Deploy to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./allure-report
        destination_dir: .  # Deploy to root of gh-pages
        keep_files: false  # Replace the entire gh-pages branch content